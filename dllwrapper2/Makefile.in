### Generated by Winemaker; modified for use in mono project
###                         and now modified to become selfcontained


### Generic autoconf variables

TOPSRCDIR             = @top_srcdir@
TOPOBJDIR             = ..
SRCDIR                = @srcdir@
VPATH                 = @srcdir@

DLLS                  =
EXES                  = libbml



### Common settings

DEFINES               =
INCLUDE_PATH          = -Iinclude -I../buzz $(WINE_INCLUDE_PATH)/.. $(WINE_INCLUDE_PATH)/../..
DLL_PATH              =
LIBRARY_PATH          =
LIBRARIES             =

DISTFILES             = ChangeLog gettid.c interlocked.c Makefile.in \
			$(wildcard *.c) $(wildcard *.h) \
			include/config.h.in include/ChangeLog include/port.h \

### bml sources and settings

bml_exe_MODULE    = libbml
bml_exe_BASEMODULE= libbml
bml_exe_APPMODE   = gui

bml_exe_C_SRCS  = pthreademu.c \
		    interlocked.c \
		    gettid.c \
		    libwinelib.c \
				bml.c \
				bmlapi.c
bml_exe_CXX_SRCS  = 

bml_exe_RC_SRCS   =
bml_exe_SPEC_SRCS =
bml_exe_DLL_PATH  = -L$(WINE_DLL_ROOT)
bml_exe_DLLS      = advapi32 \
			comdlg32 \
			gdi32 \
			kernel32 \
			odbc32 \
			ole32 \
			oleaut32 \
			shell32 \
			user32 \
			winspool

bml_exe_LIBRARY_PATH=
bml_exe_LIBRARIES =
bml_exe_DEPENDS   =

bml_exe_OBJS      = $(bml_exe_C_SRCS:.c=.o) \
			$(bml_exe_CXX_SRCS:.cpp=.o) \
			$(EXTRA_OBJS)


### Global source lists

C_SRCS                = $(bml_exe_C_SRCS)
CXX_SRCS              = $(bml_exe_CXX_SRCS)
RC_SRCS               = $(bml_exe_RC_SRCS)
SPEC_SRCS             = $(bml_exe_SPEC_SRCS)



### Generic autoconf targets

all: $(DLLS:%=%.so) $(EXES:%=%.so) bmltest_info bmltest_process

@MAKE_RULES@

install::
	_list="$(EXES:%=%.so) $(DLLS:%=%.so)"; for i in $$_list; do $(INSTALL_PROGRAM) $$i $(libdir); done
	$(MKDIR) @prefix@/include/
	$(INSTALL_PROGRAM) bml.h @prefix@/include/
	$(INSTALL_PROGRAM) BuzzMachineLoader.dll @prefix@/lib/

uninstall::
	_list="$(EXES:%=%.so) $(DLLS:%=%.so)"; for i in $$_list; do $(RM) $(libdir)/$$i;done
	$(RM) -f @prefix@/include/bml.h

### Target specific build rules

$(bml_exe_MODULE).spec.c: $(bml_exe_SPEC_SRCS) $(bml_exe_RC_SRCS:.rc=.res) $(bml_exe_OBJS)
	$(LDPATH) $(WINEBUILD) -fPIC -o $@ --exe $(bml_exe_MODULE) -m$(bml_exe_APPMODE) $(bml_exe_SPEC_SRCS:%=--spec %) $(bml_exe_RC_SRCS:%.rc=%.res) $(bml_exe_OBJS) $(bml_exe_DLL_PATH) $(WINE_DLL_PATH) $(GLOBAL_DLL_PATH) $(bml_exe_DLLS:%=-l%) $(GLOBAL_DLLS:%=-l%)

$(bml_exe_MODULE).so: $(bml_exe_MODULE).spec.o $(bml_exe_OBJS) $(bml_exe_DEPENDS)
	$(LDSHARED) $(LDDLLFLAGS) -o $@ $(bml_exe_OBJS) $(bml_exe_MODULE).spec.o $(bml_exe_LIBRARY_PATH) $(ALL_LIBRARY_PATH) $(bml_exe_LIBRARIES:%=-l%) $(ALL_LIBRARIES) $(LIBS)

bmltest_info: $(bml_exe_MODULE).so bmltest_info.o
	$(CXX) -o bmltest_info bmltest_info.o -L. -lbml 

bmltest_process: $(bml_exe_MODULE).so bmltest_process.o
	$(CXX) -o bmltest_process bmltest_process.o -L. -lbml 

top_distdir = ..
distdir = $(top_distdir)/@PACKAGE_TARNAME@-@PACKAGE_VERSION@

distdir:
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
		case $$file in \
			$(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
			$(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
		esac; \
		if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
		dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
		if test "$$dir" != "$$file" && test "$$dir" != "."; then \
			dir="/$$dir"; \
			mkdir -p "$(distdir)$$dir"; \
		else \
			dir=''; \
		fi; \
		if test -d $$d/$$file; then \
			if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
				cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
			fi; \
			cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
		else \
			test -f $(distdir)/$$file \
			|| cp -p $$d/$$file $(distdir)/$$file \
			|| exit 1; \
		fi; \
	done
